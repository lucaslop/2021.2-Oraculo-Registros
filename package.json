{
  "name": "2021.1-oraculo-processos",
  "version": "1.0.0",
  "description": "",
  "main": "src/index.js",
  "scripts": {
    "test": "export DATABASE_URL=postgres://oraculo:oraculo123@localhost:5431/oraculo && jest --coverage --forceExit",
    "db:migrate": "export DATABASE_URL=postgres://oraculo:oraculo123@localhost:5431/oraculo && sleep 5 && npx sequelize db:migrate",
    "db:migrate:prod": "npx sequelize db:migrate --env production",
    "db:seeders": "export DATABASE_URL=postgres://oraculo:oraculo123@localhost:5431/oraculo && npx sequelize db:seed:all",
    "db:seeders:prod": "npx sequelize db:seed:all --env production",
    "docker:clean": "sudo docker container rm -f oraculo-banco-registros oraculo-registros oraculo-pgadmin-registros",
    "docker:up": "sudo docker-compose up -d --build banco && sleep 5 && sudo docker-compose up -d --build",
    "db:up": "sudo docker-compose up -d --build banco",
    "db:seeders:undo": "export DATABASE_URL=postgres://oraculo:oraculo123@localhost:5431/oraculo && npx sequelize db:seed:undo:all",
    "start": "node src/index.js",
    "start:prod": "node src/index.js",
    "all": "yarn run docker:clean && yarn run docker:up && yarn run db:migrate && sleep 5 && yarn run db:seeders",
    "all:prod": "yarn docker:up && npx sequelize db:migrate && sleep 5 && npx sequelize db:seed:all",
    "update:all": "sudo docker-compose up -d --build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fga-eps-mds/2021.1-Oraculo-Processos.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/fga-eps-mds/2021.1-Oraculo-Processos/issues"
  },
  "homepage": "https://github.com/fga-eps-mds/2021.1-Oraculo-Processos#readme",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^10.0.0",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1",
    "morgan": "^1.10.0",
    "pg": "^8.7.1",
    "sequelize": "^6.6.5",
    "sequelize-cli": "^6.2.0",
    "supertest": "^6.1.6"
  },
  "devDependencies": {
    "jest": "^27.1.1",
    "jest-sonar-reporter": "^2.0.0"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverage": true,
    "testResultsProcessor": "jest-sonar-reporter",
    "coverageReporters":[
      "lcov"
      ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/test/"
    ]
  }
}
